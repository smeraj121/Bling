@model ProofOfConcept.Models.Photos

@{if (Model.ContentType.Trim() == "Video")
    {
        <a href="@Url.Action("DisplayPhoto", "Photos",new { @photoId=Model.PhotoID})" class="thumbnail img-responsive text-center">
            <img src="@Model.PhotoPath" class="thumbnails" value="tyrytghfc" />
            <input type="hidden" value="@Model.Gif" />
        </a>
        @*<div class="thumbnail img-responsive text-center">
                <video controls style="width:100%">
                <source id='preview' src="@Model.PhotoPath">
                Video Preview
                </video>
            </div>*@
    }
    else
    {
        <a href="@Url.Action("DisplayPhoto", "Photos",new { @photoId=Model.PhotoID})" class="thumbnail img-responsive text-center">
            @{var path = Model.PhotoPath.Split('/'); path[6] = "w_300";}
            <img src="@string.Join("/", path)" class="thumbnails" value="tyrytghfc" />
        </a>
    }
}

<div id="stats">
    <span>@Html.DisplayFor(modelItem => Model.Loves)</span>
    @{ var UserId = ViewBag.UserId.ToString(); }
    <span class="glyphicon @((Model.LovedBy.IndexOf("," + UserId + ",") > -1)?"glyphicon-heart":"glyphicon-heart-empty") " style="color:hotpink"></span>
    |
    <span>@Html.DisplayFor(modelItem => Model.Likes)</span>
    <span class="glyphicon glyphicon-thumbs-up @((Model.LikedBy.IndexOf("," + UserId + ",") > -1)?"liked":"")"></span>
    |
    <span>@Html.DisplayFor(modelItem => Model.Dislikes)</span>
    <span class="glyphicon glyphicon-thumbs-down @((Model.DisLikedBy.IndexOf("," + UserId + ",") > -1)?"disliked":"")"></span>
</div>
